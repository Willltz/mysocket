#ifndef _ADDRESS_CPP_
#define _ADDRESS_CPP_

#include <iostream>
#include "Socket.hpp"
using namespace std;
void Address::_address(Ip ip, Port port)
{
    this->sin_family = AF_INET;
    this->ip(ip);
    this->port(port);
    //cout<<this->port()<<endl; //10086
    //cout<<this->ip()<<endl;   //127.0.0.1
}
Address::Address()
{
    _address("127.0.0.1", 10086);
}
Address::Address(Port port)
{
    _address("127.0.0.1", port);
}
Address::Address(Ip ip, Port port)
{
    _address(ip, port);
}
Address::Address(struct sockaddr_in address)
{
    _address(inet_ntoa(address.sin_addr), address.sin_port);
}
Address::Address(const Address &address)
{
    this->sin_family = address.sin_family;
    this->sin_addr = address.sin_addr;
    this->sin_port = address.sin_port;
}
Ip Address::ip()
{
    return inet_ntoa(this->sin_addr);
}
Ip Address::ip(Ip ip)
{
    if (inet_aton(ip.c_str(), &this->sin_addr) == 0)
    {
        error_handling("Invalid ip address provided !");
    }
    return this->ip();
}
Port Address::port()
{
    return ntohs(this->sin_port);
}
Port Address::port(Port port)
{
    this->sin_port = htons(port);
    return this->port();
}
ostream& operator<< (ostream &out, Address &address)
{
    out << address.ip() << ":" << address.port();
    return out;
}
#endif

